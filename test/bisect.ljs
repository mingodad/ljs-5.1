// bisection method for solving non-linear equations

delta=1e-6;	// tolerance

function bisect(f,a,b,fa,fb) {
 var c=(a+b)/2;
 io.write(n," c=",c," a=",a," b=",b,"\n");
 if( c==a || c==b || math.abs(a-b)<delta ) { return c,b-a; }
 n+=1;
 var fc=f(c);
 if( fa*fc<0 ) { return bisect(f,a,c,fa,fc); } else { return bisect(f,c,b,fc,fb); }
}

// find root of f in the inverval [a,b]. needs f(a)*f(b)<0
function solve(f,a,b) {
 n=0;
 var z,e=bisect(f,a,b,f(a),f(b));
 io.write(string.format("after %d steps, root is %.17g with error %.1e, f=%.1e\n",n,z,e,f(z)));
}

// our function
function f(x) {
 return x*x*x-x-1;
}

// find zero in [1,2]
solve(f,1,2);
